import random
import logging
import pandas as pd
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes

BOT_TOKEN = "7642827641:AAGNl8UYh2ac2URXJuqR7UPEK7zv1MSfWIQ"

# üìä –ë–∞–∑–∞ –ò–ò-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
tools_data = [
    # –¢–µ–∫—Å—Ç
    {"name": "ChatGPT", "type": "—Ç–µ–∫—Å—Ç", "desc": "–ì–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤, –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –≤–µ–¥–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤ –∏ –ø–æ–º–æ—â–∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–∞–∑–ª–∏—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ", "link": "https://chat.openai.com/", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "Notion AI", "type": "—Ç–µ–∫—Å—Ç", "desc": "–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É Notion –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç—ã, –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ–∏, —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–ø–∏—Å–∫–∏ –∑–∞–¥–∞—á, —É–ª—É—á—à–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏ –∏ —Ä–µ–∑—é–º–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ –æ–±—ä—ë–º—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.", "link": "https://www.notion.so/product/ai", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "CopyMonkey", "type": "—Ç–µ–∫—Å—Ç", "desc": "–ò–ò –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–¥ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –±—ã—Å—Ç—Ä–æ –∑–∞–ø–æ–ª–Ω—è—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ –ø–æ–≤—ã—à–∞—Ç—å –∫–æ–Ω–≤–µ—Ä—Å–∏—é.", "link": "https://copymonkey.ai", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "Jasper", "type": "—Ç–µ–∫—Å—Ç", "desc": "–ú–æ—â–Ω–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å –¥–ª—è –∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å–∏, —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã, –ø–æ—Å—Ç—ã –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π –∏ email-—Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö —Ç–µ–º.", "link": "https://www.jasper.ai", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},

    # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
    {"name": "Midjourney", "type": "–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", "desc": "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–º –æ–ø–∏—Å–∞–Ω–∏—è–º, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∞—è—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏—Ö, —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–π —Ä–∞–∑–ª–∏—á–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.", "link": "https://midjourney.com", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "Leonardo AI", "type": "–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", "desc": "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –∫–æ–Ω—Ü–µ–ø—Ç-–∞—Ä—Ç–∞, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤, —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤ –∏ –≥–µ–π–º–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Å—Ü–µ–Ω—ã –∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫.", "link": "https://leonardo.ai", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "Canva AI", "type": "–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", "desc": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–∑–∞–π–Ω–æ–≤, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π –∏ –¥—Ä—É–≥–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —É—Å–∏–ª–∏—è–º–∏ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", "link": "https://canva.com", "lang": "—Ä—É—Å—Å–∫–∏–π"},
    {"name": "NightCafe", "type": "–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", "desc": "–ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", "link": "https://creator.nightcafe.studio/", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},

    # –í–∏–¥–µ–æ
    {"name": "Runway", "type": "–≤–∏–¥–µ–æ", "desc": "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é –ò–ò, –ø–æ–∑–≤–æ–ª—è—é—â–∞—è –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç—ã, —É–¥–∞–ª—è—Ç—å —Ñ–æ–Ω—ã, –º–µ–Ω—è—Ç—å —Å—Ç–∏–ª—å –∏ –¥–∞–∂–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–µ —Ñ–∏–ª—å–º—ã –±–µ–∑ –æ–ø—ã—Ç–∞ –º–æ–Ω—Ç–∞–∂–∞.", "link": "https://runwayml.com", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "Pictory", "type": "–≤–∏–¥–µ–æ", "desc": "–°–µ—Ä–≤–∏—Å –¥–ª—è –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è –¥–ª–∏–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤ –∏ —Å—Ç–∞—Ç–µ–π –≤ –∫–æ—Ä–æ—Ç–∫–∏–µ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–∏ –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≤–∏–¥–µ–æ –¥–∞–∂–µ –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ —Ä–∞–±–æ—Ç—ã —Å –≤–∏–¥–µ–æ—Ä–µ–¥–∞–∫—Ç–æ—Ä–∞–º–∏.", "link": "https://pictory.ai", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "Synthesia", "type": "–≤–∏–¥–µ–æ", "desc": "–ú–æ—â–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∏–∫—Ç–æ—Ä–∞–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –æ–±—É—á–∞—é—â–∏–µ —Ä–æ–ª–∏–∫–∏, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –≤–∏–¥–µ–æ –±–µ–∑ —Å—ä—ë–º–æ–∫.", "link": "https://synthesia.io", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},

    # –ü–µ—Ä–µ–≤–æ–¥
    {"name": "DeepL", "type": "–ø–µ—Ä–µ–≤–æ–¥", "desc": "–û–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö —Ç–æ—á–Ω—ã—Ö –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –º–∞—à–∏–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–æ–ª–µ–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∏ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–æ–≤ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —è–∑—ã–∫–∏ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –∞–Ω–∞–ª–æ–≥–∞–º–∏.", "link": "https://deepl.com", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "Targum", "type": "–ø–µ—Ä–µ–≤–æ–¥", "desc": "–ù–µ–π—Ä–æ—Å–µ—Ç—å, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∞—è—Å—è –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥–µ –∞—É–¥–∏–æ –∏ –≤–∏–¥–µ–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —è–∑—ã–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–∏ —ç—Ç–æ–º –∏–Ω—Ç–æ–Ω–∞—Ü–∏—é –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –æ–∫—Ä–∞—Å–∫—É –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è.", "link": "https://targum.video", "lang": "—Ä—É—Å—Å–∫–∏–π"},

    # –î–∏–∑–∞–π–Ω –∏ –ª–æ–≥–æ—Ç–∏–ø—ã
    {"name": "Looka", "type": "–¥–∏–∑–∞–π–Ω", "desc": "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ª–æ–≥–æ—Ç–∏–ø–æ–≤", "link": "https://looka.com", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "Designs AI", "type": "–¥–∏–∑–∞–π–Ω", "desc": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω", "link": "https://designs.ai", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},

    # –°–∞–π—Ç—ã / –±–∏–∑–Ω–µ—Å
    {"name": "Durable", "type": "—Å–∞–π—Ç", "desc": "–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–∞–π—Ç–æ–≤, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ –ò–ò, –∫–æ—Ç–æ—Ä—ã–π —Å–ø–æ—Å–æ–±–µ–Ω –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Å–∞–π—Ç –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–¥–∞—á–∏ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–∏—Å–∞—Ç—å –∫–æ–¥.", "link": "https://durable.co", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "Bookmark", "type": "—Å–∞–π—Ç", "desc": "–£–º–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–∞–π—Ç–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ò–ò, –∫–æ—Ç–æ—Ä—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–∞–π—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–æ—Ä–æ—Ç–∫—É—é –∞–Ω–∫–µ—Ç—É, –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É—è –∫–æ–Ω—Ç–µ–Ω—Ç –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É.", "link": "https://bookmark.com", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},

    # –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
    {"name": "Tome", "type": "–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏", "desc": "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç —Å–ª–∞–π–¥—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–¥–∞—á–∏, –∏—Å–ø–æ–ª—å–∑—É—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.", "link": "https://tome.app", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "Beautiful.ai", "type": "–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏", "desc": "–ò–ò-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Å–∏–≤—ã—Ö –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —É—Å–∏–ª–∏—è–º–∏, –∫–æ—Ç–æ—Ä–∞—è —Å–∞–º–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤, –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –∏ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∏–∑–Ω–µ—Å-–æ—Ç—á—ë—Ç–æ–≤ –∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π.", "link": "https://beautiful.ai", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},

    # –ö–∞—Ä—Ç–∏–Ω–∫–∏ –∏ –∞—Ä—Ç
    {"name": "Fotor", "type": "—Ñ–æ—Ç–æ", "desc": "–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ —Å AI", "link": "https://www.fotor.com/features/ai-image-generator/", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
    {"name": "Remini", "type": "—Ñ–æ—Ç–æ", "desc": "–£–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Ñ–æ—Ç–æ", "link": "https://remini.ai", "lang": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"},
]

df = pd.DataFrame(tools_data)

# üîé –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–¥–∞—á–∏
def classify_task(text):
    text = text.lower()
    if any(w in text for w in ["—Ç–µ–∫—Å—Ç", "–∫–æ–Ω—Ç–µ–Ω—Ç", "—Å—Ç–∞—Ç—å—è", "—ç—Å—Å–µ", "–æ–ø–∏—Å–∞–Ω–∏–µ"]):
        return "—Ç–µ–∫—Å—Ç"
    elif any(w in text for w in ["–ø–µ—Ä–µ–≤–æ–¥", "–ø–µ—Ä–µ–≤–µ—Å—Ç–∏"]):
        return "–ø–µ—Ä–µ–≤–æ–¥"
    elif any(w in text for w in ["–ª–æ–≥–æ—Ç–∏–ø", "–±—Ä–µ–Ω–¥", "–¥–∏–∑–∞–π–Ω"]):
        return "–¥–∏–∑–∞–π–Ω"
    elif any(w in text for w in ["–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "—Ä–∏—Å—É–Ω–æ–∫", "–∞—Ä—Ç", "–∫–∞—Ä—Ç–∏–Ω–∫—É"]):
        return "–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è"
    elif any(w in text for w in ["–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü", "—Å–ª–∞–π–¥—ã", "–ø—Ä–µ–∑—É"]):
        return "–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏"
    elif any(w in text for w in ["—Å–∞–π—Ç", "–ª–µ–Ω–¥–∏–Ω–≥", "–≤–µ–±"]):
        return "—Å–∞–π—Ç"
    elif any(w in text for w in ["–≤–∏–¥–µ–æ", "—Ä–æ–ª–∏–∫", "–∞–Ω–∏–º–∞—Ü–∏—è"]):
        return "–≤–∏–¥–µ–æ"
    elif any(w in text for w in ["—Ñ–æ—Ç–æ", "—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–æ–±—Ä–∞–±–æ—Ç–∫–∞"]):
        return "—Ñ–æ—Ç–æ"
    else:
        return "—Ç–µ–∫—Å—Ç"

# üöÄ –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[
        InlineKeyboardButton("–¢–µ–∫—Å—Ç", callback_data="—Ç–∏–ø_—Ç–µ–∫—Å—Ç"),
        InlineKeyboardButton("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è", callback_data="—Ç–∏–ø_–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è"),
        InlineKeyboardButton("–ü–µ—Ä–µ–≤–æ–¥", callback_data="—Ç–∏–ø_–ø–µ—Ä–µ–≤–æ–¥")
    ], [
        InlineKeyboardButton("–î–∏–∑–∞–π–Ω", callback_data="—Ç–∏–ø_–¥–∏–∑–∞–π–Ω"),
        InlineKeyboardButton("–í–∏–¥–µ–æ", callback_data="—Ç–∏–ø_–≤–∏–¥–µ–æ"),
        InlineKeyboardButton("–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏", callback_data="—Ç–∏–ø_–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏"),
        InlineKeyboardButton("–°–∞–π—Ç", callback_data="—Ç–∏–ø_—Å–∞–π—Ç")
    ]]
    await update.message.reply_text(
     "üéì <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –°–ü–±–ü–£!</b>\n"
        "–ò–Ω—Å—Ç–∏—Ç—É—Ç –ø–µ—Ä–µ–¥–æ–≤—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π\n\n"
        "ü§ñ <b>–¶–µ–ª—å –±–æ—Ç–∞:</b> –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ò–ò-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á –≤ —Ä–∞–º–∫–∞—Ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏, —É—á—ë–±—ã –∏ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã.\n\n"
        "üß† <b>–ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç:</b>\n"
        "‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏: –æ—Ç —Ç–µ–∫—Å—Ç–∞ –¥–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏\n"
        "‚Ä¢ –ü–æ–¥–æ–±—Ä–∞—Ç—å —Å–µ—Ä–≤–∏—Å—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º (–¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–∏—à–µ—Ç–µ —Ñ—Ä–∞–∑—É)\n"
        "‚Ä¢ –§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–æ —è–∑—ã–∫—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n"
        "‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞—Ç—å –≤–∞—à–∏ –∏–¥–µ–∏ —á–µ—Ä–µ–∑ /suggest\n\n"
        "üìå <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n"
        "1Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∑–∞–¥–∞—á–∏ –Ω–∏–∂–µ\n"
        "2Ô∏è‚É£ –ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´—Å–¥–µ–ª–∞–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é¬ª)\n"
        "3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Å—Å—ã–ª–∫–∞–º–∏\n\n"
        "üõ† <i>–ü—Ä–æ–µ–∫—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –≤ —Ä–∞–º–∫–∞—Ö —É—á–µ–±–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –°–ü–±–ü–£</i>\n"
        "üìÖ <i>–í–µ—Ä—Å–∏—è: –∞–ø—Ä–µ–ª—å 2025</i>\n",
     parse_mode="HTML",
     reply_markup=InlineKeyboardMarkup(keyboard)
 )

# üß† –¢–µ–∫—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text
    task_type = classify_task(user_text)
    keyboard = [
        [InlineKeyboardButton("–†—É—Å—Å–∫–∏–π", callback_data=f"—è–∑—ã–∫_{task_type}_—Ä—É—Å—Å–∫–∏–π")],
        [InlineKeyboardButton("–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", callback_data=f"—è–∑—ã–∫_{task_type}_–∞–Ω–≥–ª–∏–π—Å–∫–∏–π")],
        [InlineKeyboardButton("–õ—é–±–æ–π", callback_data=f"—è–∑—ã–∫_{task_type}_–ª—é–±–æ–π")]
    ]
    async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_text = update.message.text

    responses = [
        "üß† –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à—É –∑–∞–¥–∞—á—É...",
        "ü§ñ –£–∂–µ –∏—â—É —Ä–µ—à–µ–Ω–∏—è!",
        "üí° –°–µ–∫—É–Ω–¥—É, –ø–æ–¥–±–∏—Ä–∞—é –ò–ò-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã...",
        "üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...",
        "üîç –î—É–º–∞—é, —á—Ç–æ –º–æ–∂–µ—Ç –ø–æ–¥–æ–π—Ç–∏..."
    ]
    await update.message.reply_text(random.choice(responses), parse_mode="HTML")

    task_type = classify_task(user_text)
    keyboard = [
        [InlineKeyboardButton("–†—É—Å—Å–∫–∏–π", callback_data=f"—è–∑—ã–∫_{task_type}_—Ä—É—Å—Å–∫–∏–π")],
        [InlineKeyboardButton("–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", callback_data=f"—è–∑—ã–∫_{task_type}_–∞–Ω–≥–ª–∏–π—Å–∫–∏–π")],
        [InlineKeyboardButton("–õ—é–±–æ–π", callback_data=f"—è–∑—ã–∫_{task_type}_–ª—é–±–æ–π")]
    ]
    await update.message.reply_text(
        f"üìå –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ç–∏–ø –∑–∞–¥–∞—á–∏: <b>{task_type}</b>\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:",
        parse_mode="HTML",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

# üîò –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    task_type = query.data.replace("—Ç–∏–ø_", "")
    await show_tools(query.message, task_type, lang="–ª—é–±–æ–π")

# üåê –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
async def handle_language_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    _, task_type, lang = query.data.split("_")
    await show_tools(query.message, task_type, lang)

# üß∞ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
async def show_tools(message, task_type, lang="–ª—é–±–æ–π"):
    filtered = df[df["type"] == task_type]
    if lang != "–ª—é–±–æ–π":
        filtered = filtered[filtered["lang"] == lang]
    if filtered.empty:
        await message.reply_text("–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø–æ –∑–∞–¥–∞—á–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return
    for _, row in filtered.iterrows():
        button = InlineKeyboardMarkup([[InlineKeyboardButton("üîó –ü–µ—Ä–µ–π—Ç–∏", url=row["link"])]])
        await message.reply_text(
            f"<b>{row['name']}</b>\n{row['desc']}\nüåç –Ø–∑—ã–∫: {row['lang']}",
            parse_mode="HTML",
            reply_markup=button
        )

# üìò /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üõ† <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n"
        "1. –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é –∑–∞–¥–∞—á—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: '–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤–∏–¥–µ–æ')\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫\n"
        "3. –ü–æ–ª—É—á–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ò–ò-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤\n\n"
        "/start ‚Äî –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞\n"
        "/help ‚Äî –ø–æ–º–æ—â—å",
        parse_mode="HTML"
    )
async def suggest(update: Update, context: ContextTypes.DEFAULT_TYPE):
    suggestion = update.message.text.replace("/suggest", "").strip()
    if suggestion:
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ! üöÄ –û–Ω–æ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–æ.")
        with open("suggestions.txt", "a", encoding="utf-8") as f:
            f.write(suggestion + "\n")
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∏–¥–µ—é –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /suggest.")
# ‚ñ∂ main()
def main():
    logging.basicConfig(level=logging.INFO)
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("suggest", suggest))
    app.add_handler(CallbackQueryHandler(handle_callback, pattern="—Ç–∏–ø_"))
    app.add_handler(CallbackQueryHandler(handle_language_choice, pattern="—è–∑—ã–∫_"))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()

if __name__ == "__main__":
    main()
